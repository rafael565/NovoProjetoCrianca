@model NovoProjetoCrianca.Models.Aluno

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h1 class="text-center text-primary">Cadastrar Aluno</h1>
    <h4 class="text-center text-secondary">Preencha as informações do aluno</h4>
    <hr />

    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

              
                <div class="form-group">
                    <label asp-for="dadofamiliaID" class="control-label font-weight-bold">Família</label>
                    <select asp-for="dadofamiliaID" class="form-control" asp-items="ViewBag.dadofamiliaID"></select>
                </div>

                <div class="form-group">
                    <label asp-for="nome" class="control-label font-weight-bold">Nome</label>
                    <input asp-for="nome" class="form-control" placeholder="Nome completo" />
                    <span asp-validation-for="nome" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="cpf" class="control-label font-weight-bold">CPF</label>
                    <input asp-for="cpf"
                           class="form-control"
                           placeholder="CPF"
                           onblur="validateCPF(this)"
                           maxlength="14" />
                    <span asp-validation-for="cpf" class="text-danger" id="cpf-error"></span>
                </div>
                
                
                <div class="form-group">
                    <label asp-for="genero" class="control-label font-weight-bold">Gênero</label>
                    <select asp-for="genero" class="form-control" asp-items="Html.GetEnumSelectList<NovoProjetoCrianca.Enum.Genero>()"></select>
                    <span asp-validation-for="genero" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="escolaridade" class="control-label font-weight-bold">Escolaridade</label>
                    <select asp-for="escolaridade" class="form-control" asp-items="Html.GetEnumSelectList<NovoProjetoCrianca.Enum.Escolaridade>()"></select>
                    <span asp-validation-for="escolaridade" class="text-danger"></span>
                </div>

                
                <div class="form-group">
                    <label asp-for="DatadeNascimento" class="control-label font-weight-bold">Data de Nascimento</label>
                    <input asp-for="DatadeNascimento" class="form-control" type="date" />
                    <span asp-validation-for="DatadeNascimento" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="email" class="control-label font-weight-bold">E-mail</label>
                    <input asp-for="email" class="form-control" placeholder="E-mail" />
                    <span asp-validation-for="email" class="text-danger"></span>
                </div>

                
                <div class="form-group text-center">
                    <input type="submit" value="Criar" class="btn btn-success btn-lg" />
                </div>
            </form>
        </div>
    </div>

    <div class="text-center mt-3">
        <a asp-action="Index" class="btn btn-outline-secondary">Voltar para a Lista</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function validateCPF(input) {
            const cpf = input.value.replace(/\D/g, ""); // Remove qualquer caractere que não seja número
            const errorSpan = document.getElementById("cpf-error");

            // Função para validar o CPF
            if (!isValidCPF(cpf)) {
                errorSpan.textContent = "CPF inválido.";
                input.classList.add("is-invalid");
            } else {
                errorSpan.textContent = "";
                input.classList.remove("is-invalid");
            }
        }

        function isValidCPF(cpf) {
            if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) return false;

            let sum = 0, remainder;
            for (let i = 1; i <= 9; i++) sum += parseInt(cpf.substring(i - 1, i)) * (11 - i);
            remainder = (sum * 10) % 11;
            if (remainder === 10 || remainder === 11) remainder = 0;
            if (remainder !== parseInt(cpf.substring(9, 10))) return false;

            sum = 0;
            for (let i = 1; i <= 10; i++) sum += parseInt(cpf.substring(i - 1, i)) * (12 - i);
            remainder = (sum * 10) % 11;
            if (remainder === 10 || remainder === 11) remainder = 0;

            return remainder === parseInt(cpf.substring(10, 11));
        }
    </script>
}
