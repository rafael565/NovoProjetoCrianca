@page
@model RegisterModel
@{
    ViewData["Title"] = "Registrar uma Conta";
}

<div class="register-container">
    <div class="register-box">
        <h1>@ViewData["Title"]</h1>

        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Use uma conta local para fazer registrar uma conta.</h2>
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Senha</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirmar Senha</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Registrar</button>
        </form>

        @if ((Model.ExternalLogins?.Count ?? 0) > 0)
        {
            <div class="mt-4">
                <p>Ou use uma conta externa:</p>
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                    @foreach (var provider in Model.ExternalLogins!)
                    {
                        <button type="submit" class="btn btn-outline-primary w-100 mt-2" name="provider" value="@provider.Name">
                            @provider.DisplayName
                        </button>
                    }
                </form>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<style>
    /* Centralizar usando Flexbox */
    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #483D8B; /* Fundo claro */
        padding: 20px;
    }

    .register-box {
        width: 100%;
        max-width: 400px;
        padding: 20px;
        background: #ffffff;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    h1 {
        text-align: center;
        margin-bottom: 20px;
        color: #483D8B;
    }

    h2 {
        text-align: center;
        color: #7B68EE;
    }

    .btn-primary {
        background-color: #483D8B;
        border: none;
        color: white;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #5a4aad;
        }

    .btn-outline-primary {
        color: #483D8B;
        border-color: #483D8B;
    }

        .btn-outline-primary:hover {
            background-color: #483D8B;
            color: white;
        }

    .form-floating {
        margin-bottom: 15px;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .text-danger {
        font-size: 0.9rem;
    }
</style>
